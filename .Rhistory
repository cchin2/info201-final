colnames(file) <- c("ï..State", colnames(file)[2])
return(file)
}
co2 <- only_2016(co2)
co2_per_capita <- only_2016(co2_per_capita)
View(co2_per_capita)
View(co2)
# data wrangling
# select only 2016 values
co2 <- select(co2, ï..State, X2016)
co2_per_capita <- select(co2_per_capita, ï..State, X2016)
View(co2)
View(co2_per_capita)
colnames(co2_per_capita) <- c("ï..State", "co2_per_capita")
View(co2_per_capita)
colnames(co2) <- c("ï..State", "co2")
View(co2)
combined <- inner_join(biofuel, co2, by = "ï..State")
View(combined)
combined <- inner_join(biofuel, co2, by = "ï..State") %>%
inner_join(., co2_per_capita, by = "ï..State")
View(combined)
combined <- inner_join(biofuel, co2, by = "ï..State") %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = "ï..State")
View(natural_gas)
View(fuel_ethanol)
View(crude_oil)
View(combined)
View(co2_per_capita)
View(biofuel)
combined <- inner_join(biofuel, co2, by = "ï..State") %>%
inner_join(., crude_oil, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")
View(combined)
combined <- inner_join(biofuel, co2, by = "ï..State") %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State"))
View(combined)
styler:::style_selection()
combined <- inner_join(biofuel, crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")) %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., co2, by = "ï..State")
View(combined)
colnames(combined)[1] <- "State"
View(combined)
library("dplyr")
library("tidyr")
### references ###
# https://www.eia.gov/environment/emissions/state/analysis/
# https://www.eia.gov/state/seds/seds-data-complete.php?sid=US#Production
biofuel <- read.csv("data/biofuel.csv", stringsAsFactors = FALSE)
co2 <- read.csv("data/co2.csv", stringsAsFactors = FALSE)
co2_per_capita <- read.csv("data/co2_per_capita.csv", stringsAsFactors = FALSE)
crude_oil <- read.csv("data/crude_oil.csv", stringsAsFactors = FALSE)
fuel_ethanol <- read.csv("data/fuel_ethanol.csv", stringsAsFactors = FALSE)
natural_gas <- read.csv("data/natural_gas.csv", stringsAsFactors = FALSE)
# data wrangling
# select only 2016 values
co2 <- select(co2, ï..State, X2016)
colnames(co2) <- c("ï..State", "co2")
co2_per_capita <- select(co2_per_capita, ï..State, X2016)
colnames(co2_per_capita) <- c("ï..State", "co2_per_capita")
combined <- inner_join(biofuel, crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")) %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., co2, by = "ï..State")
colnames(combined)[1] <- "State"
View(combined)
View(co2)
# question 1: the average amount of forested areas world-wide over time
forest_df <- read.csv("data/WBI_Forest_Area_Cleaned.csv", stringsAsFactors = FALSE)
forest_definition_df <- read.csv("data/WBI_Definition_and_Source.csv", stringsAsFactors = FALSE)
setwd("C:/Users/hp/Desktop/INFO 201/a7-data-visualization-suny44")
library(dplyr)
library(ggplot2)
library(tidyr)
library(maps)
# question 1: the average amount of forested areas world-wide over time
forest_df <- read.csv("data/WBI_Forest_Area_Cleaned.csv", stringsAsFactors = FALSE)
forest_definition_df <- read.csv("data/WBI_Definition_and_Source.csv", stringsAsFactors = FALSE)
forest_df$YR1992 <- trimws(forest_df$YR1992)
forest_percent_change_df <- filter(forest_df, Series.Name == "Forest area (% of land area)") %>%
mutate(percent_change_1992_2016 = YR2012 - YR1996) %>%
na.omit(percent_change_1992_2016) %>%
select(Series.Name, Country.Name, Country.Code, percent_change_1992_2016)
# Join two data frames by the three-letter country code
world <- map_data("world")
world_iso <- mutate(world, Country.Code = iso.alpha(world$region, n = 3))
View(world_iso)
colnames(combined)
colnames(combined)[1:4]
colnames(combined)[2:5]
feature <- colnames(combined)[2:5]
feature[1]
my_ui <- fluidPage(
#shows the widgets
sidebarLayout(
sidebarPanel(
selectInput(inputId = "feature",
label = "Energy Used",
choices = feature,
selected = feature[1])
),
#shows the result from the widgets in tabs
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("Page 1", dataTableOutput("table"), textOutput(outputId = "message1")),
tabPanel("Page 2", plotOutput("plot"), textOutput(outputId = "message2"))
)
)
)
)
library("shiny")
my_ui <- fluidPage(
#shows the widgets
sidebarLayout(
sidebarPanel(
selectInput(inputId = "feature",
label = "Energy Used",
choices = feature,
selected = feature[1])
),
#shows the result from the widgets in tabs
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("Page 1", dataTableOutput("table"), textOutput(outputId = "message1")),
tabPanel("Page 2", plotOutput("plot"), textOutput(outputId = "message2"))
)
)
)
)
my_server <- function(input, output) {
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = feature[5]
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
#shows the widgets
sidebarLayout(
sidebarPanel(
selectInput(inputId = "feature",
label = "Energy Used",
choices = feature,
selected = feature[1])
),
#shows the result from the widgets in tabs
mainPanel(
plotOutput(outputId = "plot")
)
)
)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = feature[5],
label = "text"
))
})
}
shinyApp(ui = my_ui, server = my_server)
combined$biofuel..trillion.btu.
combined$biofuel..trillion.btu. <- as.numeric(combined$biofuel..trillion.btu.)
combined$biofuel..trillion.btu.
combined$crude_oil..thousand.barrels. <- as.numeric(combined$crude_oil..thousand.barrels.)
combined$biofuel..trillion.btu. <- as.numeric(combined$biofuel..trillion.btu.)
library("dplyr")
library("tidyr")
library("shiny")
### references ###
# https://www.eia.gov/environment/emissions/state/analysis/
# https://www.eia.gov/state/seds/seds-data-complete.php?sid=US#Production
biofuel <- read.csv("data/biofuel.csv", stringsAsFactors = FALSE)
co2 <- read.csv("data/co2.csv", stringsAsFactors = FALSE)
co2_per_capita <- read.csv("data/co2_per_capita.csv", stringsAsFactors = FALSE)
crude_oil <- read.csv("data/crude_oil.csv", stringsAsFactors = FALSE)
fuel_ethanol <- read.csv("data/fuel_ethanol.csv", stringsAsFactors = FALSE)
natural_gas <- read.csv("data/natural_gas.csv", stringsAsFactors = FALSE)
# data wrangling
# select only 2016 values
co2 <- select(co2, ï..State, X2016)
colnames(co2) <- c("ï..State", "co2")
co2_per_capita <- select(co2_per_capita, ï..State, X2016)
colnames(co2_per_capita) <- c("ï..State", "co2_per_capita")
combined <- inner_join(biofuel, crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")) %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., co2, by = "ï..State")
colnames(combined)[1] <- "State"
library("dplyr")
library("tidyr")
library("shiny")
biofuel <- read.csv("data/biofuel.csv", stringsAsFactors = FALSE)
co2 <- read.csv("data/co2.csv", stringsAsFactors = FALSE)
setwd("C:/Users/hp/Desktop/INFO 201/info201-final")
biofuel <- read.csv("data/biofuel.csv", stringsAsFactors = FALSE)
co2 <- read.csv("data/co2.csv", stringsAsFactors = FALSE)
co2_per_capita <- read.csv("data/co2_per_capita.csv", stringsAsFactors = FALSE)
crude_oil <- read.csv("data/crude_oil.csv", stringsAsFactors = FALSE)
fuel_ethanol <- read.csv("data/fuel_ethanol.csv", stringsAsFactors = FALSE)
natural_gas <- read.csv("data/natural_gas.csv", stringsAsFactors = FALSE)
# data wrangling
# select only 2016 values
co2 <- select(co2, ï..State, X2016)
colnames(co2) <- c("ï..State", "co2")
co2_per_capita <- select(co2_per_capita, ï..State, X2016)
colnames(co2_per_capita) <- c("ï..State", "co2_per_capita")
combined <- inner_join(biofuel, crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")) %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., co2, by = "ï..State")
colnames(combined)[1] <- "State"
View(combined)
combined$biofuel..trillion.btu. <- as.numeric(combined$biofuel..trillion.btu.)
combined$crude_oil..thousand.barrels. <- as.numeric(combined$crude_oil..thousand.barrels.)
library("dplyr")
library("tidyr")
library("shiny")
### references ###
# https://www.eia.gov/environment/emissions/state/analysis/
# https://www.eia.gov/state/seds/seds-data-complete.php?sid=US#Production
biofuel <- read.csv("data/biofuel.csv", stringsAsFactors = FALSE)
co2 <- read.csv("data/co2.csv", stringsAsFactors = FALSE)
co2_per_capita <- read.csv("data/co2_per_capita.csv", stringsAsFactors = FALSE)
crude_oil <- read.csv("data/crude_oil.csv", stringsAsFactors = FALSE)
fuel_ethanol <- read.csv("data/fuel_ethanol.csv", stringsAsFactors = FALSE)
natural_gas <- read.csv("data/natural_gas.csv", stringsAsFactors = FALSE)
# data wrangling
# select only 2016 values
co2 <- select(co2, ï..State, X2016)
colnames(co2) <- c("ï..State", "co2")
co2_per_capita <- select(co2_per_capita, ï..State, X2016)
colnames(co2_per_capita) <- c("ï..State", "co2_per_capita")
combined <- inner_join(biofuel, crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")) %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., co2, by = "ï..State")
colnames(combined)[1] <- "State"
combined$biofuel..trillion.btu. <- as.numeric(combined$biofuel..trillion.btu.)
combined$crude_oil..thousand.barrels. <- as.numeric(combined$crude_oil..thousand.barrels.)
biofuel <- read.csv("data/biofuel.csv", stringsAsFactors = FALSE)
co2 <- read.csv("data/co2.csv", stringsAsFactors = FALSE)
co2_per_capita <- read.csv("data/co2_per_capita.csv", stringsAsFactors = FALSE)
crude_oil <- read.csv("data/crude_oil.csv", stringsAsFactors = FALSE)
fuel_ethanol <- read.csv("data/fuel_ethanol.csv", stringsAsFactors = FALSE)
natural_gas <- read.csv("data/natural_gas.csv", stringsAsFactors = FALSE)
# data wrangling
# select only 2016 values
co2 <- select(co2, ï..State, X2016)
colnames(co2) <- c("ï..State", "co2")
co2_per_capita <- select(co2_per_capita, ï..State, X2016)
colnames(co2_per_capita) <- c("ï..State", "co2_per_capita")
combined <- inner_join(biofuel, crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")) %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., co2, by = "ï..State")
colnames(combined)[1] <- "State"
View(combined)
standby_df <- combined
View(combined)
standby_df <- combined
View(standby_df)
standby_df$biofuel..trillion.btu. <- as.numeric(combined$biofuel..trillion.btu.)
standby_df$crude_oil..thousand.barrels. <- as.numeric(combined$crude_oil..thousand.barrels.)
View(standby_df)
colnames(standby_df)
standby_df <- combined
standby_df$biofuel..trillion.btu. <- as.numeric(standby_df$biofuel..trillion.btu.)
standby_df$natural_gas..million.cubic.feet. <- as.numeric(standby_df$natural_gas..million.cubic.feet.)
library("dplyr")
library("tidyr")
library("shiny")
### references ###
# https://www.eia.gov/environment/emissions/state/analysis/
# https://www.eia.gov/state/seds/seds-data-complete.php?sid=US#Production
biofuel <- read.csv("data/biofuel.csv", stringsAsFactors = FALSE)
co2 <- read.csv("data/co2.csv", stringsAsFactors = FALSE)
co2_per_capita <- read.csv("data/co2_per_capita.csv", stringsAsFactors = FALSE)
crude_oil <- read.csv("data/crude_oil.csv", stringsAsFactors = FALSE)
fuel_ethanol <- read.csv("data/fuel_ethanol.csv", stringsAsFactors = FALSE)
natural_gas <- read.csv("data/natural_gas.csv", stringsAsFactors = FALSE)
# data wrangling
# select only 2016 values
co2 <- select(co2, ï..State, X2016)
colnames(co2) <- c("ï..State", "co2")
co2_per_capita <- select(co2_per_capita, ï..State, X2016)
colnames(co2_per_capita) <- c("ï..State", "co2_per_capita")
combined <- inner_join(biofuel, crude_oil, by = "ï..State") %>%
inner_join(., fuel_ethanol, by = "ï..State") %>%
inner_join(., natural_gas, by = c("ï..State" = "State")) %>%
inner_join(., co2_per_capita, by = "ï..State") %>%
inner_join(., co2, by = "ï..State")
colnames(combined)[1] <- "State"
View(combined)
standby_df <- combined
standby_df$biofuel..trillion.btu. <- as.numeric(standby_df$biofuel..trillion.btu.)
standby_df$natural_gas..million.cubic.feet. <- as.numeric(gsub(",", "", standby_df$natural_gas..million.cubic.feet.))
View(combined)
standby_df$natural_gas..million.cubic.feet.
combined$crude_oil..thousand.barrels. <- as.numeric(gsub(",", "", combined$crude_oil..thousand.barrels.))
combined$fuel_ethanol..thousand. <- as.numeric(gsub(",", "", combined$fuel_ethanol..thousand.))
my_ui <- fluidPage(
#shows the widgets
sidebarLayout(
sidebarPanel(
selectInput(inputId = "feature",
label = "Energy Used",
choices = feature,
selected = feature[1])
),
#shows the result from the widgets in tabs
mainPanel(
plotOutput(outputId = "plot")
)
)
)
feature <- colnames(combined)[2:5]
my_ui <- fluidPage(
#shows the widgets
sidebarLayout(
sidebarPanel(
selectInput(inputId = "feature",
label = "Energy Used",
choices = feature,
selected = feature[1])
),
#shows the result from the widgets in tabs
mainPanel(
plotOutput(outputId = "plot")
)
)
)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = feature[5],
label = "text"
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = feature[5],
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = feature[5],
label = colnames(combined)[1]
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = feature[5],
label = combined$State
))
})
}
shinyApp(ui = my_ui, server = my_server)
View(combined)
runApp('data_wrangling.R')
combined$co2 <- as.numeric(gsub(",", "", combined$co2))
my_ui <- fluidPage(
#shows the widgets
sidebarLayout(
sidebarPanel(
selectInput(inputId = "feature",
label = "Energy Used",
choices = feature,
selected = feature[1])
),
#shows the result from the widgets in tabs
mainPanel(
plotOutput(outputId = "plot")
)
)
)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = feature[5],
label = combined$State
))
})
}
shinyApp(ui = my_ui, server = my_server)
feature[5]
combined$co2
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = input$feature,
y = combined$co2,
label = combined$State
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2,
label = combined$State
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2,
label = combined$State
)) +
geom_line()
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2,
label = combined$State
)) +
geom_line(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2,
label = combined$State
)) +
geom_point(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2
))
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data = combined) +
geom_text(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2,
label = combined$State
)) +
geom_point(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2
)) +
geom_line(mapping = aes(
x = combined$biofuel..trillion.btu.,
y = combined$co2
))
})
}
shinyApp(ui = my_ui, server = my_server)
